version: '2.2'
services:
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  nginx:
    environment:
      - SERVICE_NAME=bouncer-nginx-container
      - SERVICES_PREFIX=${SERVICES_PREFIX:?}
      - DNS_SUFFIX=${DNS_SUFFIX:?}
    container_name: bouncer-nginx-container
    image: nginx
    ports:
      - '443:443'
      - '80:80'
    ulimits:
      nproc: 10240
      nofile:
        soft: 10240
        hard: 10240
    volumes:
      - './config/nginx.conf:/etc/nginx/nginx.conf'
      - ./data/certbot/conf:/etc/letsencrypt
      - './config/static:/etc/nginx/static'
      - './certs:/etc/nginx/certs'
      - './config/services-nginx-config:/etc/nginx/conf.d'
      - './logs/bouncer-nginx:/var/log/nginx'
      - './data/certbot/www:/var/www/certbot'
    command: >-
      /bin/bash -c "nginx -g 'daemon off;' & while [ 1 ]; do nginx -s reload &>>
      /tmp/reload.log; sleep 30; clear; done"
    networks:
      - bouncer_bouncer_network
    mem_limit: 100m
    restart: 'on-failure:5'
  bluejay_reporter:
    container_name: bluejay-reporter-container
    image: governify/reporter:dev
    environment:
      - SERVICE_NAME=${SERVICES_PREFIX:?}-reporter-container
      - NODE_ENV=production
      - PORT=80
      - SERVICES_PREFIX=${SERVICES_PREFIX:?}
      - DNS_SUFFIX=${DNS_SUFFIX:?}
    networks:
      bouncer_bouncer_network:
        aliases:
          - reporter.${SERVICES_PREFIX:?}${DNS_SUFFIX:?}
    volumes:
      - './logs/bluejay-reporter:/opt/app/logs'
    mem_limit: 400m
    restart: 'unless-stopped'
    depends_on:
      - bluejay_assetsmanager
      - bluejay_registry_db
      - bluejay_influxdb
  bluejay_grafana:
    container_name: bluejay-grafana-container
    image: governify/dashboard:dev
    environment:
      - SERVICE_NAME=${SERVICES_PREFIX:?}-grafana-container
      - NODE_ENV=production
    networks:
      bouncer_bouncer_network:
        aliases:
          - dashboard.${SERVICES_PREFIX:?}${DNS_SUFFIX:?}
    volumes:
      - 'bluejay_grafana_volume:/var/lib/grafana'
    mem_limit: 400m
    restart: 'unless-stopped'
    depends_on:
      - bluejay_reporter
  bluejay_render:
    container_name: bluejay-render-container
    image: governify/render:dev
    environment:
      - SERVICE_NAME=${SERVICES_PREFIX:?}-render-container
      - NODE_ENV=production
      - PORT=80
      - LAYOUT=bootstrap3.html
      - LOGIN_USER=governify-admin
      - LOGIN_PASSWORD=governify-project
      - DEFAULT_VIEW=http://assets.${SERVICES_PREFIX:?}${DNS_SUFFIX:?}/api/v1/public/renders/index/view.html
      - DEFAULT_CONTROLLER=http://assets.${SERVICES_PREFIX:?}${DNS_SUFFIX:?}/api/v1/public/renders/index/controller.js
      - DEFAULT_MODEL=http://assets.${SERVICES_PREFIX:?}${DNS_SUFFIX:?}/api/v1/public/renders/index/model.json
    networks:
      bouncer_bouncer_network:
        aliases:
          - ui.${SERVICES_PREFIX:?}${DNS_SUFFIX:?}
    volumes:
      - './logs/render:/opt/app/logs'
    mem_limit: 400m
    restart: 'unless-stopped'
  bluejay_registry_db:
    environment:
      - SERVICE_NAME=${SERVICES_PREFIX:?}-registry-db-container
    container_name: bluejay-registry-db-container
    image: mongo
    networks:
      bouncer_bouncer_network:
        aliases:
          - mongo_registry
    volumes:
      - 'bluejay_registry_db_volume:/data/db'
      - './backups/mongodb:/data2import'
    mem_limit: 1200m
    restart: 'unless-stopped'
  bluejay_influxdb:
    image: 'influxdb:latest'
    container_name: bluejay-influxdb-container
    networks:
      bouncer_bouncer_network:
        aliases:
          - influxdb
    volumes:
      - 'bluejay_influxdb_volume:/var/lib/influxdb'
      - './influxdb:/etc/influxdb'
      - './backups/influxdb:/var/backups'
    mem_limit: 1200m
    restart: 'unless-stopped'
  bluejay_registry:
    container_name: bluejay-registry-container
    image: 'isagroup/governify-registry:bluejay'
    networks:
      bouncer_bouncer_network:
        aliases:
          - registry.${SERVICES_PREFIX:?}${DNS_SUFFIX:?}
    environment:
      - NODE_ENV=production
      - PORT=80
      - SERVICE_NAME=${SERVICES_PREFIX:?}-registry-container
    volumes:
      - './logs/registry:/opt/app/logs'
      - './static:/opt/app/public/static'
    depends_on:
      - bluejay_registry_db
    mem_limit: 400m
    restart: 'unless-stopped'
  bluejay_eventcollector:
    container_name: bluejay-eventcollector-container
    image: 'governify/collector-events:dev'
    environment:
      - SERVICE_NAME=${SERVICES_PREFIX:?}-eventcollector-container
      - NODE_ENV=production
      - PORT=80
      - KEY_SCOPE_MANAGER=${KEY_SCOPE_MANAGER}
      - KEY_GITHUB=${KEY_GITHUB}
      - KEY_PIVOTAL=${KEY_PIVOTAL}
      - KEY_TRAVIS=${KEY_TRAVIS}
      - KEY_HEROKU=${KEY_HEROKU}
      - KEY_CODECLIMATE=${KEY_CODECLIMATE}
    networks:
      bouncer_bouncer_network:
        aliases:
          - event.collector.${SERVICES_PREFIX:?}${DNS_SUFFIX:?}
    mem_limit: 400m
    restart: 'unless-stopped'
  bluejay_scopemanager:
    container_name: bluejay-scopemanager-container
    image: 'governify/scope-manager:dev'
    environment:
      - SERVICE_NAME=${SERVICES_PREFIX:?}-scopemanager-container
      - NODE_ENV=production
      - PORT=80
      - URL_INT_ASSETS_MANAGER=http://assets.${SERVICES_PREFIX:?}${DNS_SUFFIX:?}
      - KEY_ASSETS_MANAGER_PRIVATE=${KEY_ASSETS_MANAGER_PRIVATE}
      - KEY_SCOPE_MANAGER=${KEY_SCOPE_MANAGER}
    networks:
      bouncer_bouncer_network:
        aliases:
          - scopes.${SERVICES_PREFIX:?}${DNS_SUFFIX:?}
    mem_limit: 400m
    restart: 'unless-stopped'
    depends_on:
      - bluejay_assetsmanager
  bluejay_assetsmanager:
    container_name: bluejay-assetsmanager-container
    image: 'governify/assets-manager:dev'
    environment:
      - SERVICE_NAME=${SERVICES_PREFIX:?}-assetsmanager-container
      - NODE_ENV=production
      - PORT=80
      - LOGIN_USER=governify-admin
      - LOGIN_PASSWORD=governify-project
      - SERVICES_PREFIX=${SERVICES_PREFIX:?}
      - DNS_SUFFIX=${DNS_SUFFIX:?}
      - URL_EXT_ASSETS_MANAGER=https://assets.${SERVICES_PREFIX:?}${DNS_SUFFIX:?}
      - URL_INT_ASSETS_MANAGER=http://assets.${SERVICES_PREFIX:?}${DNS_SUFFIX:?}
      - PRIVATE_KEY=${KEY_ASSETS_MANAGER_PRIVATE:?}
    networks:
      bouncer_bouncer_network:
        aliases:
          - assets.${SERVICES_PREFIX:?}${DNS_SUFFIX:?}
    volumes:
      - './assets:/home/theia/src-gen/backend/files'
    mem_limit: 400m
    restart: 'unless-stopped'
volumes:
  bluejay_influxdb_volume: null
  bluejay_registry_db_volume: null
  bluejay_grafana_volume: null
networks:
  bouncer_bouncer_network:
    external: true
